///////////////////////////////////////////////////////////////////////////////
// 
// Служебный модуль с реализацией сценариев обработки файлов <ИмяСценария>
//
///////////////////////////////////////////////////////////////////////////////

// ИмяСценария
//	Возвращает имя сценария обработки файлов
//
// Возвращаемое значение:
//   Строка   - Имя текущего сценария обработки файлов
//
Функция ИмяСценария() Экспорт
	
	ВызватьИсключение "Имя сценария не установлено";
	Возврат "ИмяСценария";
	
КонецФункции // ИмяСценария()

// ПолучитьСтандартныеНастройкиСценария
//	Возвращает структуру настроек сценария
//
// Возвращаемое значение:
//   Структура   - Структура с настройками сценария
//  	* ИмяСценария	- Строка - Имя, с которым сохранятся настройки
//		* Настройка		- Соответствие - настройки
//
Функция ПолучитьСтандартныеНастройкиСценария() Экспорт
	
	ВызватьИсключение "Настройки отсутствуют";
	
	НастройкиСценария = Новый Соответствие;
	НастройкиСценария.Вставить("ИспользоватьПоУмолчанию", Истина);
	НастройкиСценария.Вставить("Версия", "");
	НастройкиСценария.Вставить("КоличествоПопыток", 5);
	НастройкиСценария.Вставить("МассивПараметров", Новый Массив);
	
	Возврат  Новый Структура("ИмяСценария, Настройка", ИмяСценария(), НастройкиСценария);
	
КонецФункции

// ОбработатьФайл
//	Выполняет обработку файла
//
// Параметры:
//  АнализируемыйФайл		- Файл - Файл из журнала git для анализа
//  КаталогИсходныхФайлов  	- Строка - Каталог расположения исходных файлов относительно каталог репозитория
//  ДополнительныеПараметры - Структура - Набор дополнительных параметров, которые можно использовать 
//  	* Лог  					- Объект - Текущий лог
//  	* ИзмененныеКаталоги	- Массив - Каталоги, которые необходимо добавить в индекс
//		* КаталогРепозитория	- Строка - Адрес каталога репозитория
//		* ФайлыДляПостОбработки	- Массив - Файлы, изменившиеся / образовавшиеся в результате работы сценария
//											и которые необходимо дообработать
//		* ИзмененныеКаталоги	- Массив - Каталоги / файлы которые необходимо добавить в индекс
//
// Возвращаемое значение:
//   Булево   - Признак выполненной обработки файла
//
Функция ОбработатьФайл(АнализируемыйФайл, КаталогИсходныхФайлов, ДополнительныеПараметры) Экспорт
	
	ВызватьИсключение "Обработка файла не реализована";
	Лог = ДополнительныеПараметры.Лог;
	НастройкиСценария = ДополнительныеПараметры.Настройки.Получить(ИмяСценария());
	
	// анализ файла без изменения его содержимого
	Если АнализируемыйФайл.Существует() И ТипыФайлов.ЭтоФайлИсходников(АнализируемыйФайл) Тогда
		
		Лог.Информация("Обработка файла '%1' по сценарию '%2'", АнализируемыйФайл.ПолноеИмя, ИмяСценария());
		
		ШаблоннаяОбработкаФайла(АнализируемыйФайл);
		
		Возврат Истина;
		
	КонецЕсли;
	
	// анализ файла с изменением его содержимого
	Если АнализируемыйФайл.Существует() И ТипыФайлов.ЭтоФайлИсходников(АнализируемыйФайл) Тогда
		
		Лог.Информация("Обработка файла '%1' по сценарию '%2'", АнализируемыйФайл.ПолноеИмя, ИмяСценария());
		
		Если ШаблоннаяОбработкаФайлаСИзменением(АнализируемыйФайл) Тогда
			
			//Добавим измененный каталог или файл в индекс, чтобы он закоммитился с изменениями 
			ДополнительныеПараметры.ИзмененныеКаталоги.Добавить(АнализируемыйФайл.ПолноеИмя);
			
			//Добавим измененный файл в журнал изменений без добавления в индекс, чтобы сценарии прошли снова
			ДополнительныеПараметры.ФайлыДляПостОбработки.Добавить(АнализируемыйФайл.ПолноеИмя);
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ОбработатьФайл()

Процедура ШаблоннаяОбработкаФайла(ИмяФайла)
	
	СодержимоеФайла = ФайловыеОперации.ПрочитатьТекстФайла(ИмяФайла);
	
	Если Не ЗначениеЗаполнено(СодержимоеФайла) Тогда
		
		Возврат;
		
	КонецЕсли;

	Если СодержимоеФайла = СодержимоеФайла Тогда
		
		ВызватьИсключение "Содержимое файла равно содержимому файла";
		
	КонецЕсли;
	
КонецПроцедуры

Функция ШаблоннаяОбработкаФайлаСИзменением(ИмяФайла)
	
	СодержимоеФайла = ФайловыеОперации.ПрочитатьТекстФайла(ИмяФайла);
	
	Если Не ЗначениеЗаполнено(СодержимоеФайла) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ФайловыеОперации.ЗаписатьТекстФайла(ИмяФайла, СодержимоеФайла + "1");
	
	Возврат Истина;
	
КонецФункции